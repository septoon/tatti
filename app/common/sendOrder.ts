import axios from 'axios';

interface CartItem {
  id: number;
  name: string;
  price: number;
  quantity: number;
}

interface OrderDetails {
  name: string;
  phone: string;
  date?: Date | null;
  wishes?: string;
  deliveryMethod?: 'pickup' | 'courier';
  address?: string;
  cartItems?: CartItem[];
  totalPrice?: number;
}

const sendOrder = async ({
  name,
  phone,
  date,
  wishes,
  deliveryMethod,
  address,
  cartItems,
  totalPrice
}: OrderDetails) => {
  const botToken = process.env.NEXT_PUBLIC_BOT_TOKEN;
  const chatId = process.env.NEXT_PUBLIC_CHANNEL_ID; 

  const orderDetails = cartItems?.map((item) => 
    `${item.name} ‚Äî ${item.quantity} —à—Ç. (${item.price * item.quantity} —Ä.)`
  ).join('\n') || '–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ';

  const deliveryInfo = deliveryMethod === 'courier'
    ? `–î–æ—Å—Ç–∞–≤–∫–∞: –ö—É—Ä—å–µ—Ä\n–ê–¥—Ä–µ—Å: ${address || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`
    : deliveryMethod === 'pickup'
    ? `–î–æ—Å—Ç–∞–≤–∫–∞: –°–∞–º–æ–≤—ã–≤–æ–∑`
    : '';

  const message = `
üö® *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*

üë§ –ò–º—è: ${name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7${phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üìÖ –î–∞—Ç–∞: ${date ? date.toLocaleDateString() : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üì¶ –ü–æ–∂–µ–ª–∞–Ω–∏—è: ${wishes || '–ù–µ—Ç'}

${deliveryInfo}

üõí *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*
${orderDetails}

${totalPrice ? `üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: ${totalPrice} —Ä.` : ''}
  `;

  try {
    await axios.post(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      chat_id: chatId,
      text: message,
      parse_mode: 'HTML',
    });
    return true;
    alert('–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
  }
};

export default sendOrder;